
(defpackage :julia-runs
  (:use :common-lisp :alexandria :header-ffi :to-julia)
  (:export )
  (:documentation "Runs for producing julia code to load stuff."))

(in-package :julia-runs)

(defun ffi-gl (&key src-dir
	       (where (format nil "~a/../output/gl.j" src-dir)))
  (with-open-file (stream where
			  :direction :output :if-exists :supersede 
			  :if-does-not-exist :create)
    (format stream "#Autogenerated, hopefully stays that way!~%")
    (format stream "lib_gl = dlopen(\"libGL\")~2%")
    (let ((*string-conv* #'string-downcase))
      (header-ffi "GL/gl.h" (rcurry #'to-julia
				    :dlopen-lib "lib_gl" :stream stream)
		  :defines-p t))))

(defun ffi-sdl (&key src-dir  ;TODO doesn't work.
		(where (format nil "~a/../output/sdl.j" src-dir)))
  (with-open-file (stream where
			  :direction :output :if-exists :supersede 
			  :if-does-not-exist :create)
    (format stream "#Autogenerated, hopefully stays that way!~%")
    (format stream "lib_sdl = dlopen(\"libSDL\")~2%")
    (let ((*string-conv* #'string-downcase))
      (header-ffi "SDL/SDL.h" (rcurry #'to-julia
				      :dlopen-lib "lib_sdl" :stream stream)
		  :defines-p t))))

;(ffi-gl :src-dir "/home/jasper/proj/common-lisp/parse-c-header/src/runs/")